// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PVI.GQKN.Infrastructure;

#nullable disable

namespace PVI.GQKN.API.Infrastructure.GQKNDbContextMigrations
{
    [DbContext(typeof(GQKNDbContext))]
    [Migration("20221008124450_DonViScope")]
    partial class DonViScope
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Algorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DataProtected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsX509Certificate")
                        .HasColumnType("bit");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Use");

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("ConsumedTime");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.ChucDanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("MaChucVu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("NguoiSuaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_sua");

                    b.Property<int?>("NguoiTaoId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_tao");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("MaChucVu")
                        .IsUnique();

                    b.ToTable("tbl_chuc_danh", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.DonVi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("MaDonVi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("NguoiSuaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_sua");

                    b.Property<int?>("NguoiTaoId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_tao");

                    b.Property<string>("TenDonVi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("MaDonVi")
                        .IsUnique();

                    b.HasIndex("TenDonVi")
                        .IsUnique();

                    b.ToTable("tbl_don_vi", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.HoSoTonThat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DeXuatDeNghi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Đề nghị/đề xuất");

                    b.Property<string>("DiaDiemTonThat")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComment("Địa điểm tổn thất");

                    b.Property<string>("DoiTuongTonThat")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("Đối tượng bị tổn thất");

                    b.Property<int?>("DonViCapDonId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasComment("Đơn vị cấp đơn");

                    b.Property<string>("DonViTienTe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Đơn vị tiền tệ");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("NguoiSuaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_sua");

                    b.Property<int?>("NguoiTaoId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasComment("Mã người tạo");

                    b.Property<string>("NguyenNhanSoBo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Nguyên nhân sơ bộ");

                    b.Property<string>("PhuongAnKhacPhuc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Phương án khắc phục");

                    b.Property<string>("SoHopDong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Số hợp đồng");

                    b.Property<string>("TaiLieuConThieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianTonThat")
                        .HasColumnType("datetime2")
                        .HasComment("Thời gian tổn thất");

                    b.Property<string>("ThongTinKhac")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Thông tin khác");

                    b.Property<bool>("TrangThaiHoSo")
                        .HasColumnType("bit")
                        .HasComment("Trạng thái hồ sơ");

                    b.Property<int>("TrangThaiTaiLieu")
                        .HasColumnType("int");

                    b.Property<decimal?>("UocLuongTonThat")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("Ước lượng tổn thất");

                    b.HasKey("Id");

                    b.HasIndex("DonViCapDonId");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.ToTable("tbl_ho_so_tt", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AccountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2)
                        .HasColumnName("loai_tai_khoan");

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Ảnh đại diện");

                    b.Property<int?>("ChucDanhId")
                        .HasColumnType("int")
                        .HasColumnName("ma_chucdanh")
                        .HasComment("Chức danh FK");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dia_chi")
                        .HasComment("Địa chỉ");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int")
                        .HasColumnName("ma_donvi")
                        .HasComment("Mã đơn vị");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fullname")
                        .HasComment("Họ và tên");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaNhom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Mã nhóm");

                    b.Property<string>("MaUserPVI")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ma_dinhdanh");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sinh")
                        .HasComment("Ngày sinh");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("PhongBanId")
                        .HasColumnType("int")
                        .HasColumnName("ma_phong")
                        .HasComment("Phòng ban FK");

                    b.Property<bool>("QuanTri")
                        .HasColumnType("bit")
                        .HasColumnName("quan_tri")
                        .HasComment("Tài khoản admin hay không?");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThaiUser")
                        .HasColumnType("bit")
                        .HasColumnName("trang_thai_user")
                        .HasComment("Trạng thái user (active?)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ChucDanhId");

                    b.HasIndex("DonViId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PhongBanId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.KBTT.KhaiBaoTonThat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DeXuat")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("de_xuat");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("dia_chi");

                    b.Property<string>("DiaDiemTonThat")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("dia_diem_tt");

                    b.Property<string>("DoiTuongBiTonThat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dtuong_bi_tt");

                    b.Property<string>("DoiTuongDuocBaoHiem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dtuong_duoc_bh");

                    b.Property<int?>("DonViCapDonId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("donvi_cdon");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("GQKNId")
                        .HasColumnType("int")
                        .HasColumnName("donvi_gqkn");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int?>("HinhThucId")
                        .HasColumnType("int")
                        .HasColumnName("ma_httn");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ho_ten");

                    b.Property<string>("MaDinhDanh")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ma_dinhdanh");

                    b.Property<int?>("MaTinhId")
                        .HasColumnType("int")
                        .HasColumnName("ma_tinhtp");

                    b.Property<DateTime?>("NgayBatDauBH")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_bdau_bh");

                    b.Property<DateTime?>("NgayKetThucBH")
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_kthuc_bh");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("NguoiLienHe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoi_lhe");

                    b.Property<int?>("NguoiSuaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_sua");

                    b.Property<int?>("NguoiTaoId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_tao");

                    b.Property<string>("NguyenNhanSoBo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("nnhan_so_bo");

                    b.Property<int?>("PhongBanId")
                        .HasColumnType("int");

                    b.Property<string>("PhuongAnKhacPhuc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("pa_kphuc");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("so_dthoai");

                    b.Property<string>("SoDonBaoHiem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("so_don_bh");

                    b.Property<string>("SoDonSDBD")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("so_don_sdbs");

                    b.Property<string>("SoHopDong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("so_hdong");

                    b.Property<string>("TaiLieuConThieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianTonThat")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgian_tt");

                    b.Property<DateTime?>("ThoigianTiepNhan")
                        .HasColumnType("datetime2")
                        .HasColumnName("tgian_tnhan");

                    b.Property<string>("ThongTinKhac")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ttin_khac");

                    b.Property<bool?>("TrangThai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("tthai_kbtt");

                    b.Property<int>("TrangThaiTaiLieu")
                        .HasColumnType("int");

                    b.Property<int?>("TyGiaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_tygia");

                    b.Property<decimal?>("UocLuongTonThat")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("uoc_luong_tt");

                    b.Property<int?>("UserNhanId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_nhan");

                    b.HasKey("Id");

                    b.HasIndex("DonViCapDonId");

                    b.HasIndex("GQKNId");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("PhongBanId");

                    b.ToTable("kbtt_ctu", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.PhongBan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("LoaiPhongBan")
                        .HasColumnType("int");

                    b.Property<string>("MaPhongBan")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("NguoiSuaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_sua");

                    b.Property<int?>("NguoiTaoId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_tao");

                    b.Property<int?>("PhongBanChaId")
                        .HasColumnType("int");

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("PhongBanChaId")
                        .IsUnique()
                        .HasFilter("[PhongBanChaId] IS NOT NULL");

                    b.ToTable("tbl_phong_ban", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.TaiLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DuongDan")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("duong_dan");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("HoSoTonThatId")
                        .HasColumnType("int")
                        .HasColumnName("ma_kbtt");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("NguoiSuaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_sua");

                    b.Property<int?>("NguoiTaoId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_tao");

                    b.Property<string>("TenTaiLieu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ten_tai_lieu");

                    b.Property<int>("ThuMucId")
                        .HasColumnType("int")
                        .HasColumnName("thu_muc_id");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("HoSoTonThatId");

                    b.HasIndex("ThuMucId");

                    b.ToTable("dm_tailieu", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.TaiLieuBookMark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DuongDanBookMark")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ddan_bookmark");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("MaBookMark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ma_bookmark");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("NguoiSuaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_sua");

                    b.Property<int?>("NguoiTaoId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_tao");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<int>("TaiLieuId")
                        .HasColumnType("int")
                        .HasColumnName("ma_tlieu");

                    b.Property<string>("TenBookMark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ten_bookmark");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("TaiLieuId");

                    b.ToTable("tailieu_bookmark", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.ThuMuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("HoSoTonThatId")
                        .HasColumnType("int")
                        .HasColumnName("ma_kbtt");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("NguoiSuaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_sua");

                    b.Property<int?>("NguoiTaoId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_tao");

                    b.Property<string>("TenThuMuc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ten_thu_muc");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trang_thai");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("HoSoTonThatId");

                    b.ToTable("thu_muc", (string)null);
                });

            modelBuilder.Entity("PVI.GQKN.Infrastructure.Idempotency.BieuMau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_sua");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("ngay_tao")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("NguoiSuaId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_sua");

                    b.Property<int?>("NguoiTaoId")
                        .HasColumnType("int")
                        .HasColumnName("ma_user_tao");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBieuMau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.ToTable("tbl_bieu_mau", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("BieuMau");
                });

            modelBuilder.Entity("PVI.GQKN.Infrastructure.Idempotency.ClientRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("requests", "gqkn");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.Identity.ApplicationRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<int?>("DonViId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySua")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("PhongBanId")
                        .HasColumnType("int");

                    b.HasIndex("DonViId");

                    b.HasIndex("PhongBanId");

                    b.HasDiscriminator().HasValue("ApplicationRole");
                });

            modelBuilder.Entity("PVI.GQKN.Infrastructure.Idempotency.BieuMauEmail", b =>
                {
                    b.HasBaseType("PVI.GQKN.Infrastructure.Idempotency.BieuMau");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.ToTable("tbl_bieu_mau", (string)null);

                    b.HasDiscriminator().HasValue("BieuMauEmail");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PVI.GQKN.Domain.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.DonVi", b =>
                {
                    b.OwnsMany("PVI.GQKN.Domain.Models.Scope", "Scopes", b1 =>
                        {
                            b1.Property<int>("DonViId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("DonViId", "Id");

                            b1.ToTable("Scope");

                            b1.WithOwner()
                                .HasForeignKey("DonViId");
                        });

                    b.Navigation("Scopes");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.HoSoTonThat", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.DonVi", "DonViCapDon")
                        .WithMany("HoSoTonThats")
                        .HasForeignKey("DonViCapDonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("PVI.GQKN.Domain.Models.DonBaoHiem", "DonBaoHiem", b1 =>
                        {
                            b1.Property<int>("HoSoTonThatId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("NgayBatDauBH")
                                .HasColumnType("datetime2")
                                .HasComment("Ngày bắt đầu bảo hiểm");

                            b1.Property<DateTime>("NgayKetThucBH")
                                .HasColumnType("datetime2")
                                .HasComment("Ngày kết thúc bảo hiểm");

                            b1.Property<string>("SDBD")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SoDon")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasComment("Số đơn bảo hiểm");

                            b1.HasKey("HoSoTonThatId");

                            b1.ToTable("tbl_ho_so_tt");

                            b1.WithOwner()
                                .HasForeignKey("HoSoTonThatId");
                        });

                    b.OwnsOne("PVI.GQKN.Domain.Models.LienHe", "NguoiDuocBaoHiem", b1 =>
                        {
                            b1.Property<int>("HoSoTonThatId")
                                .HasColumnType("int");

                            b1.Property<string>("DiaChi")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("HoTen")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("SoDienThoai")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("HoSoTonThatId");

                            b1.ToTable("tbl_ho_so_tt");

                            b1.WithOwner()
                                .HasForeignKey("HoSoTonThatId");
                        });

                    b.OwnsOne("PVI.GQKN.Domain.Models.LienHe", "NguoiLienHe", b1 =>
                        {
                            b1.Property<int>("HoSoTonThatId")
                                .HasColumnType("int");

                            b1.Property<string>("DiaChi")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("HoTen")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("SoDienThoai")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("HoSoTonThatId");

                            b1.ToTable("tbl_ho_so_tt");

                            b1.WithOwner()
                                .HasForeignKey("HoSoTonThatId");
                        });

                    b.Navigation("DonBaoHiem");

                    b.Navigation("DonViCapDon");

                    b.Navigation("NguoiDuocBaoHiem")
                        .IsRequired();

                    b.Navigation("NguoiLienHe")
                        .IsRequired();
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.Identity.ApplicationUser", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.ChucDanh", "ChucDanh")
                        .WithMany()
                        .HasForeignKey("ChucDanhId");

                    b.HasOne("PVI.GQKN.Domain.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonViId");

                    b.HasOne("PVI.GQKN.Domain.Models.PhongBan", "PhongBan")
                        .WithMany()
                        .HasForeignKey("PhongBanId");

                    b.Navigation("ChucDanh");

                    b.Navigation("DonVi");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.KBTT.KhaiBaoTonThat", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.DonVi", "DonViCapDon")
                        .WithMany()
                        .HasForeignKey("DonViCapDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PVI.GQKN.Domain.Models.DonVi", "GQKN")
                        .WithMany()
                        .HasForeignKey("GQKNId");

                    b.HasOne("PVI.GQKN.Domain.Models.PhongBan", null)
                        .WithMany("KhaiBaoTonThats")
                        .HasForeignKey("PhongBanId");

                    b.Navigation("DonViCapDon");

                    b.Navigation("GQKN");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.PhongBan", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PVI.GQKN.Domain.Models.PhongBan", "PhongBanCha")
                        .WithOne()
                        .HasForeignKey("PVI.GQKN.Domain.Models.PhongBan", "PhongBanChaId");

                    b.Navigation("DonVi");

                    b.Navigation("PhongBanCha");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.TaiLieu", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.HoSoTonThat", "HoSoTonThat")
                        .WithMany()
                        .HasForeignKey("HoSoTonThatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PVI.GQKN.Domain.Models.ThuMuc", "ThuMuc")
                        .WithMany()
                        .HasForeignKey("ThuMucId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoSoTonThat");

                    b.Navigation("ThuMuc");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.TaiLieuBookMark", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.TaiLieu", "TaiLieu")
                        .WithMany()
                        .HasForeignKey("TaiLieuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TaiLieu");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.ThuMuc", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.HoSoTonThat", "HoSoTonThat")
                        .WithMany()
                        .HasForeignKey("HoSoTonThatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoSoTonThat");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.Identity.ApplicationRole", b =>
                {
                    b.HasOne("PVI.GQKN.Domain.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PVI.GQKN.Domain.Models.PhongBan", "PhongBan")
                        .WithMany()
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DonVi");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.DonVi", b =>
                {
                    b.Navigation("HoSoTonThats");
                });

            modelBuilder.Entity("PVI.GQKN.Domain.Models.PhongBan", b =>
                {
                    b.Navigation("KhaiBaoTonThats");
                });
#pragma warning restore 612, 618
        }
    }
}
